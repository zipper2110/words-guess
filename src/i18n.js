import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';
import LanguageDetector from 'i18next-browser-languagedetector';

const resources = {
  en: {
    translation: {
      "welcome": "Welcome",
      "login": "Log In",
      "signup": "Sign Up",
      "dashboard": "Dashboard",
      "settings": "Settings",
      "logout": "Log Out",
      "language": "Language",
      "resetGame": "Reset Game",
      "admin": "Admin",
      "resetGameConfirm": "This will reset your progress to Level 1 and clear your score. Are you sure?",
      "cancel": "Cancel",
      "levelComplete": "üéâ Level Complete! üéâ",
      "levelCompleteMessage": "Great job! Ready for the next challenge?",
      "nextLevel": "Next Level",
      "howToPlay": "How to Play",
      "helpIntro": "Welcome to Word Game! Create as many words as you can using letters from the main word.",
      "helpRule1": "Form words using the letters from the base word",
      "helpRule2": "Each word must be at least 3 letters long",
      "helpRule3": "You can use each letter only once per word",
      "helpRule4": "All words must be valid English words",
      "helpRule5": "Score points based on the length of each word you find",
      "helpRule6": "Find all possible words to complete the level",
      "helpRule7": "Need help? Use the menu to get a clue for an unfound word",
      "level": "Level",
      "score": "Score",
      "progress": "Progress",
      "wordHints": "Word Hints",
      "bonusWords": "Bonus Words",
      "noBonusWords": "No bonus words found yet",
      "showDefinitions": "Show Definitions",
      "typeGuess": "Type your guess...",
      "levelCompletePlaceholder": "Level Complete!",
      "submit": "Submit"
      // Add more translations as needed
    }
  },
  ru: {
    translation: {
      "welcome": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å",
      "login": "–í–æ–π—Ç–∏",
      "signup": "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
      "dashboard": "–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
      "settings": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
      "logout": "–í—ã–π—Ç–∏",
      "language": "–Ø–∑—ã–∫",
      "resetGame": "–°–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É",
      "admin": "–ê–¥–º–∏–Ω",
      "resetGameConfirm": "–≠—Ç–æ —Å–±—Ä–æ—Å–∏—Ç –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —É—Ä–æ–≤–Ω—è 1 –∏ –æ—á–∏—Å—Ç–∏—Ç —Å—á–µ—Ç. –í—ã —É–≤–µ—Ä–µ–Ω—ã?",
      "cancel": "–û—Ç–º–µ–Ω–∞",
      "levelComplete": "üéâ –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω! üéâ",
      "levelCompleteMessage": "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ì–æ—Ç–æ–≤—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏—Å–ø—ã—Ç–∞–Ω–∏—é?",
      "nextLevel": "–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å",
      "howToPlay": "–ö–∞–∫ –∏–≥—Ä–∞—Ç—å",
      "helpIntro": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Word Game! –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ —Å–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –±—É–∫–≤—ã –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–ª–æ–≤–∞.",
      "helpRule1": "–°–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å–ª–æ–≤–∞ –∏–∑ –±—É–∫–≤ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–ª–æ–≤–∞",
      "helpRule2": "–ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 –±—É–∫–≤—ã",
      "helpRule3": "–ö–∞–∂–¥—É—é –±—É–∫–≤—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å–ª–æ–≤–µ",
      "helpRule4": "–í—Å–µ —Å–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏",
      "helpRule5": "–ù–∞–±–∏—Ä–∞–π—Ç–µ –æ—á–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏–Ω—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤",
      "helpRule6": "–ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è",
      "helpRule7": "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è –Ω–µ–Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞",
      "level": "–£—Ä–æ–≤–µ–Ω—å",
      "score": "–°—á–µ—Ç",
      "progress": "–ü—Ä–æ–≥—Ä–µ—Å—Å",
      "wordHints": "–ü–æ–¥—Å–∫–∞–∑–∫–∏ —Å–ª–æ–≤",
      "bonusWords": "–ë–æ–Ω—É—Å–Ω—ã–µ —Å–ª–æ–≤–∞",
      "noBonusWords": "–ë–æ–Ω—É—Å–Ω—ã—Ö —Å–ª–æ–≤ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
      "showDefinitions": "–ü–æ–∫–∞–∑–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è",
      "typeGuess": "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–ª–æ–≤–æ...",
      "levelCompletePlaceholder": "–£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–π–¥–µ–Ω!",
      "submit": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
      // Add more translations as needed
    }
  }
};

i18n
  .use(LanguageDetector)
  .use(initReactI18next)
  .init({
    resources,
    fallbackLng: 'en',
    interpolation: {
      escapeValue: false, // React already safes from XSS
    },
    detection: {
      order: ['navigator', 'htmlTag', 'cookie', 'localStorage', 'path'],
      caches: ['localStorage', 'cookie'],
    }
  });

export default i18n; 